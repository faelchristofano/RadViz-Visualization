/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package radviz;

import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author rafael
 */
public class Principal extends javax.swing.JFrame {
      RadViz rv;
      JPanelRV painel;
      int diametro;
      String caminhoFile = "";
      JScrollPane scroll;
       
  
    public Principal() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        diametro = 700;  
        this.itm_apagar.setEnabled(false);
        this.itm_tamanho.setEnabled(false);
         
    }
    //uso o filechooser para o usuaruio localizar o arquivo
    public void AbrirArquivo(){
        JFileChooser fc = new JFileChooser();
        //abre a caixa para seleção do arquivo
        fc.showOpenDialog(null);
        //o usuario pode selecionar 1 aquivo por vez
        fc.setMultiSelectionEnabled(false);
        
        caminhoFile = fc.getSelectedFile().getPath();
        this.itm_apagar.setEnabled(true);
        this.itm_tamanho.setEnabled(true);

    }
    //desenho o RadViz no JPanel
    public void Desenhar(){
        
       rv = new RadViz(0,0, diametro, caminhoFile);
  
       painel = new JPanelRV(rv, diametro);      
       painel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
       painel.setPreferredSize(new Dimension(diametro, diametro));

       scroll = new JScrollPane(painel);
       setLayout(new BorderLayout());
       add(scroll, BorderLayout.CENTER);
       setVisible(true);
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        itm_file = new javax.swing.JMenu();
        itm_ler = new javax.swing.JMenuItem();
        itm_apagar = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        itm_tamanho = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritimo RadViz - Desenvolvido por Rafael Mariano Christófano -  Orientado por Danilo Medeiros Eler");
        setPreferredSize(new java.awt.Dimension(700, 700));
        setSize(new java.awt.Dimension(700, 700));

        itm_file.setText("File");

        itm_ler.setText("Ler Base de Dados");
        itm_ler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_lerActionPerformed(evt);
            }
        });
        itm_file.add(itm_ler);

        itm_apagar.setText("Apagar imagem");
        itm_apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_apagarActionPerformed(evt);
            }
        });
        itm_file.add(itm_apagar);

        jMenuBar1.add(itm_file);

        jMenu1.setText("Configuração");

        itm_tamanho.setText("Definir Tamanho do RadViz");
        itm_tamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_tamanhoActionPerformed(evt);
            }
        });
        jMenu1.add(itm_tamanho);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 617, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // menu ler dados
    private void itm_lerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_lerActionPerformed
        if(painel != null){
            this.remove(painel);
            this.remove(scroll);
        }
        AbrirArquivo();
        Desenhar();
        this.itm_apagar.setEnabled(true);
        this.itm_tamanho.setEnabled(true);
        
    }//GEN-LAST:event_itm_lerActionPerformed
    //menu apagar panel
    private void itm_apagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_apagarActionPerformed
        // TODO add your handling code here:
        this.remove(painel);
        this.remove(scroll);
        repaint();
    }//GEN-LAST:event_itm_apagarActionPerformed
//menu definir o tamanho do radviz
    private void itm_tamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_tamanhoActionPerformed
        // TODO add your handling code here:
       diametro = Integer.parseInt(JOptionPane.showInputDialog(null, "Informe o Diametro do RadViz:", "Informe o Diametro do RadViz", JOptionPane.PLAIN_MESSAGE));
       this.remove(painel);
       this.remove(scroll);
       Desenhar();
       repaint();
    }//GEN-LAST:event_itm_tamanhoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itm_apagar;
    private javax.swing.JMenu itm_file;
    private javax.swing.JMenuItem itm_ler;
    private javax.swing.JMenuItem itm_tamanho;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
   
}
